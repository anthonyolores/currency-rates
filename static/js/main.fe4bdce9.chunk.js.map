{"version":3,"sources":["components/InputText.js","context/CurrencyContext.js","reducers/CurrencyReducer.js","services/CurrencyService.js","App.js","serviceWorker.js","index.js"],"names":["CmpInputText","_ref","placeholder","value","handler","focusHandler","disable","react_default","a","createElement","type","onChange","e","target","onFocus","disabled","CurrencyContext","createContext","initialState","currency","fromNumber","fromCurrency","toNumber","toCurrency","isFromCurrency","isToCurrency","actions","SET_CURRENCY","SET_FROM_NUMBER","SET_FROM_CURRENCY","SET_TO_NUMBER","SET_TO_CURRENCY","SET_IS_FROM_CURRENCY","SET_IS_TO_CURRENCY","reducer","state","action","console","log","data","rates","listRates","Object","keys","objectSpread","domain","CurrencyService","getRates","curr1","curr2","axios","get","toUpperCase","validateStatus","getHistory","dateTo","moment","format","dateFrom","subtract","getAbbr","colStyle","padding","abbrs","isCurrencyValid","length","indexOf","getResult","num","operation","result","parseFloat","isLess0","rate","toFixed","setCurrency","from","to","dispatch","_rates","base","date","defineProperty","then","response","error","catch","CurrencyList","actionType","actionType2","_useContext","useContext","currencyState","listRef","useRef","ref","handleClickOutside","event","current","contains","innerText","useEffect","document","addEventListener","removeEventListener","useClickOutside","abbrrList","keyword","tempList","slice","i","push","filterAbbrList","className","ListGroup","defaultActiveKey","map","item","index","Item","key","FromCurrency","_useContext2","useCallback","InputText","ToCurrency","_useContext3","FromNumber","_useContext4","_useState","useState","_useState2","slicedToArray","setDisable","test","ToNumber","_useContext5","_useState3","_useState4","LineChart","_ref2","color","_useContext6","_useState5","_useState6","setLineChart","_useState7","_useState8","lineData","setLineData","chartRef","currencies","label","replace","sort","b","parseInt","Chart","labels","d","datasets","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","steppedLine","App","_useReducer","useReducer","_useReducer2","useMemo","Provider","Container","Row","Col","xs","sm","md","style","App_FromCurrency","App_CurrencyList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4bdce9.chunk.js","sourcesContent":["import React from 'react';\r\nconst CmpInputText = ({placeholder, value, handler, focusHandler, disable}) => {\r\n    //console.log('rendered input text');\r\n    const handleChange = e => {\r\n        handler(e.target.value);\r\n    };\r\n    const handleFocus = () => {\r\n        if(focusHandler)\r\n            focusHandler(true)\r\n    };\r\n    return (\r\n        <input \r\n            type='text' \r\n            value={value} \r\n            onChange={handleChange}\r\n            onFocus={handleFocus}\r\n            placeholder={placeholder}\r\n            disabled={disable}\r\n        />\r\n    );\r\n}\r\n \r\nexport default CmpInputText;","\r\nimport React, { createContext } from 'react';\r\n\r\nexport const context = {\r\n};\r\nexport const CurrencyContext = createContext(context);","\r\nexport const initialState = {\r\n    currency: null,\r\n    fromNumber: 0,\r\n    fromCurrency: '',\r\n    toNumber:0,\r\n    toCurrency:'',\r\n    isFromCurrency: false,\r\n    isToCurrency: false\r\n  };\r\n\r\nexport const actions = {\r\n    SET_CURRENCY: 'SET_CURRENCY',\r\n    SET_FROM_NUMBER: 'SET_FROM_NUMBER',\r\n    SET_FROM_CURRENCY: 'SET_FROM_CURRENCY',\r\n    SET_TO_NUMBER: 'SET_TO_NUMBER',\r\n    SET_TO_CURRENCY: 'SET_TO_CURRENCY',\r\n    SET_IS_FROM_CURRENCY: 'SET_IS_FROM_CURRENCY',\r\n    SET_IS_TO_CURRENCY: 'SET_IS_TO_CURRENCY'\r\n  };\r\n  \r\nexport const reducer = (state, action) => {\r\n  console.log(action.type + '---' + action.data);\r\n    switch(action.type){\r\n      case actions.SET_CURRENCY: {\r\n        if(action.data && action.data.rates != null){\r\n          const listRates = Object.keys(action.data.rates);\r\n          action.data.rates = [\r\n            {value: action.data.rates[listRates[0]], currency: listRates[0]},\r\n            {value: action.data.rates[listRates[1]], currency: listRates[1]}\r\n          ]\r\n        }\r\n        return {\r\n          ...state,\r\n          currency: action.data\r\n        }\r\n      }\r\n      case actions.SET_FROM_NUMBER: {\r\n        return {\r\n          ...state,\r\n          fromNumber: action.data\r\n        }     \r\n      }\r\n      case actions.SET_FROM_CURRENCY: {\r\n        return {\r\n          ...state,\r\n          fromCurrency: action.data\r\n        }      \r\n      }\r\n      case actions.SET_TO_NUMBER: {\r\n        return {\r\n          ...state,\r\n          toNumber: action.data\r\n        }      \r\n      }\r\n      case actions.SET_TO_CURRENCY: {\r\n        return {\r\n          ...state,\r\n          toCurrency: action.data\r\n        }      \r\n      }\r\n      case actions.SET_IS_FROM_CURRENCY: {\r\n        return {\r\n          ...state,\r\n          isFromCurrency: action.data==null?false:action.data,\r\n          isToCurrency: action.data==null?false:!action.data\r\n        }      \r\n      }\r\n      case actions.SET_IS_TO_CURRENCY: {\r\n        return {\r\n          ...state,\r\n          isFromCurrency: action.data==null?false:!action.data,\r\n          isToCurrency: action.data==null?false:action.data\r\n        }      \r\n      }\r\n      default:{\r\n        return initialState;\r\n      }\r\n    }\r\n  };","import axios from 'axios';\r\nimport moment from 'moment';\r\nconst domain = 'https://api.exchangeratesapi.io/';\r\nconst CurrencyService = {\r\n    getRates:(curr1, curr2)=>{\r\n        try{\r\n            let promise = axios.get((domain + 'latest?base='+ curr1.toUpperCase() +'&symbols='+ curr1.toUpperCase() + ',' + curr2.toUpperCase()), {validateStatus: false});\r\n            return promise;\r\n        }\r\n        catch(e){\r\n            return null;\r\n        }\r\n    },\r\n    getHistory:(curr1, curr2)=>{\r\n        try{\r\n            const dateTo = moment().format('YYYY-MM-DD');\r\n            const dateFrom = moment().subtract(30,'d').format('YYYY-MM-DD');\r\n            let promise = axios.get((domain + 'history?start_at=' + dateFrom + '&end_at=' + dateTo +  '&base='+ curr1.toUpperCase() +'&symbols='+ curr1.toUpperCase() + ',' + curr2.toUpperCase()), {validateStatus: false});\r\n            return promise;\r\n        }\r\n        catch(e){\r\n            return null;\r\n        } \r\n    },\r\n    getAbbr: () => [\r\n        'USD',\r\n        'JPY',\r\n        'BGN',\r\n        'CZK',\r\n        'DKK',\r\n        'GBP',\r\n        'HUF',\r\n        'PLN',\r\n        'RON',\r\n        'SEK',\r\n        'CHF',\r\n        'ISK',\r\n        'NOK',\r\n        'HRK',\r\n        'RUB',\r\n        'TRY',\r\n        'AUD',\r\n        'BRL',\r\n        'CAD',\r\n        'CNY',\r\n        'HKD',\r\n        'IDR',\r\n        'ILS',\r\n        'INR',\r\n        'KRW',\r\n        'MXN',\r\n        'MYR',\r\n        'NZD',\r\n        'PHP',\r\n        'SGD',\r\n        'THB',\r\n        'ZAR'\r\n    ]\r\n};\r\n\r\nexport default CurrencyService;","import './App.scss';\nimport React, { useReducer, useContext, useRef, useEffect, useState, useCallback, useMemo} from 'react';\nimport CmpInputText from './components/InputText';\nimport {Container, Row, Col, ListGroup} from 'react-bootstrap';\nimport {CurrencyContext} from '../src/context/CurrencyContext';\nimport {actions, reducer, initialState} from './reducers/CurrencyReducer';\nimport CurrencyService from './services/CurrencyService';\nimport {Chart} from 'chart.js';\nconst colStyle = {\n  padding:5\n};\nconst abbrs = CurrencyService.getAbbr();\n\nfunction filterAbbrList(keyword){\n  let tempList = [];\n  if(keyword === ''){\n    tempList = abbrs.slice();\n  }\n  else{\n    keyword = keyword.toUpperCase();\n    for(let i = 0; i < abbrs.length; i++){\n      if(abbrs[i].indexOf(keyword) !== -1){\n        tempList.push(abbrs[i]);\n      }\n    }\n  }\n  return tempList;\n}\n\nfunction isCurrencyValid(currency){\n  if(currency && currency.length > 0){\n    return abbrs.indexOf(currency.toUpperCase()) !== -1?true:false;  \n  }\n  else{\n    return false;\n  } \n}\n\nfunction getResult(num, currency, operation){\n  let result  = 0;\n  if(num != ''){\n    num = parseFloat(num);\n    const isLess0 = (currency.rates[1].value<0);\n    const rate = currency.rates[1].value == 1? currency.rates[0].value : currency.rates[1].value;\n    if(operation === 0){\n      result = isLess0? (num / rate) : (num * rate);\n    }\n    else{\n      result = isLess0? (num * rate) : (num / rate);\n    }\n  }\n\n  return result % 1 != 0? result.toFixed(2) : result;\n}\n\nfunction setCurrency(from, to, dispatch){\n  if(isCurrencyValid(from) && isCurrencyValid(to)){\n    if(from == to){\n      dispatch({type:actions.SET_CURRENCY, data:{\n        base: 'from',\n        date: '',\n        rates:{\n          [from]:1,\n          [to+'2']:1,\n        }\n      }});\n    }\n    else{\n      CurrencyService.getRates(from, to).then((response)=>{\n        if(response.data.error){\n          dispatch({type:actions.SET_CURRENCY, data:null});\n        }\n        else{\n          dispatch({type:actions.SET_CURRENCY, data:response.data});    \n        }\n      }).catch((error)=>{\n        dispatch({type:actions.SET_CURRENCY, data:null});\n      });\n    }\n  }\n  else{\n    dispatch({type:actions.SET_CURRENCY, data:null});\n  }\n}\n\nexport const CurrencyList = ({actionType, actionType2}) => {\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const listRef = useRef(null);\n  //function must start with use if using hooks\n  function useClickOutside(ref) {\n    function handleClickOutside(event) {\n      if (ref.current && \n        !ref.current.contains(event.target) && \n        event.target.placeholder !== 'Currency') {\n        dispatch({type:actionType2, data:null});\n      }\n      else if(ref.current && ref.current.contains(event.target)){\n        dispatch({type:actionType, data:event.target.innerText});\n        dispatch({type:actionType2, data:null});\n        setCurrency(currencyState.isFromCurrency?event.target.innerText:currencyState.fromCurrency, currencyState.isToCurrency?event.target.innerText:currencyState.toCurrency, dispatch);\n      }\n    }\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  }\n\n  useClickOutside(listRef);\n  const abbrrList = filterAbbrList(currencyState.isFromCurrency?currencyState.fromCurrency:currencyState.toCurrency);  \n  return <div className=\"list-container\" ref={listRef}>\n  <ListGroup defaultActiveKey=\"#link1\">\n      {\n        abbrrList.map((item, index)=>{\n          return <ListGroup.Item key={index}>{item}</ListGroup.Item>\n        })\n      }\n  </ListGroup>\n  </div>\n  }\n\nexport const FromCurrency = () => {\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const handler = useCallback((value) => {\n    dispatch({type:actions.SET_FROM_CURRENCY, data:value});\n    setCurrency(value, currencyState.toCurrency, dispatch);\n  });\n  const focusHandler = (value) => {\n    dispatch({type:actions.SET_IS_FROM_CURRENCY, data:value});\n  }\n  return <CmpInputText value={currencyState.fromCurrency} placeholder={'Currency'} handler={handler} focusHandler={focusHandler}/>\n}\n\nexport function ToCurrency(){\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const handler = useCallback((value) => {\n    dispatch({type:actions.SET_TO_CURRENCY, data:value});\n    setCurrency(currencyState.fromCurrency, value, dispatch);\n  });\n  const focusHandler = (value) => {\n    dispatch({type:actions.SET_IS_TO_CURRENCY, data:value});\n  }\n  return <CmpInputText value={currencyState.toCurrency} placeholder={'Currency'} handler={handler} focusHandler={focusHandler}/>\n}\n\nexport function FromNumber(){\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const [disable, setDisable] = useState(true);\n  const handler = useCallback((value) => {\n    if(/^[0-9.]*$/.test(value)){\n      dispatch({type:actions.SET_FROM_NUMBER, data:value});  \n      if((isCurrencyValid(currencyState.fromCurrency) && isCurrencyValid(currencyState.toCurrency))){\n        dispatch({type:actions.SET_TO_NUMBER, data:getResult(value, currencyState.currency, 0)});\n      }\n    }\n  });\n  useEffect(()=>{\n    setDisable(!(isCurrencyValid(currencyState.fromCurrency) && isCurrencyValid(currencyState.toCurrency)));\n  }, [currencyState.fromCurrency, currencyState.toCurrency, currencyState.fromNumber, currencyState.toNumber]);\n  return <CmpInputText value={currencyState.fromNumber} placeholder={0} handler={handler} disable={disable}/>\n}\n\nexport function ToNumber(){\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const [disable, setDisable] = useState(true);\n  const handler = useCallback((value) => {\n    if(/^[0-9.]*$/.test(value)){\n      dispatch({type:actions.SET_TO_NUMBER, data:value});\n      if((isCurrencyValid(currencyState.fromCurrency) && isCurrencyValid(currencyState.toCurrency))){\n        dispatch({type:actions.SET_FROM_NUMBER, data:getResult(value, currencyState.currency, 1)});\n      }\n    }\n  });\n  useEffect(()=>{\n    setDisable(!(isCurrencyValid(currencyState.fromCurrency) && isCurrencyValid(currencyState.toCurrency))); \n  }, [currencyState.fromCurrency, currencyState.toCurrency, currencyState.fromNumber, currencyState.toNumber]);\n  return <CmpInputText value={currencyState.toNumber} placeholder={0} handler={handler} disable={disable}/>\n}\n\nfunction LineChart({color}){\n\n  const { currencyState, dispatch } = useContext(CurrencyContext);\n  const [lineChart, setLineChart] = useState(null);\n  const [lineData, setLineData] = useState(null);\n  const chartRef = useRef(null);\n\n  useEffect(()=>{\n    if((isCurrencyValid(currencyState.fromCurrency) && isCurrencyValid(currencyState.toCurrency))){\n      CurrencyService.getHistory(currencyState.fromCurrency, currencyState.toCurrency).then((response)=>{\n        const dates = Object.keys(response.data.rates);\n        const data = dates.map((item => {\n          const currencies = Object.keys(response.data.rates[item]);\n          const value = response.data.rates[item][currencies[0]] == 1? response.data.rates[item][currencies[1]] : response.data.rates[item][currencies[0]];\n          return {label: item.replace('2019-',''), value: value};\n        }));\n        data.sort((a, b) => parseInt(a.label.replace('-', '')) - parseInt(b.label.replace('-', '')));\n        setLineData(data);\n        setLineChart(new Chart(chartRef.current, {\n          type: 'line',\n          data: {\n            labels: data.map(d => d.label),\n            datasets: [{\n              label: 'Exchange Rate History',\n              data: data.map(d => d.value),\n              fill: 'none',\n              backgroundColor: color,\n              pointRadius: 4,\n              borderColor: color,\n              borderWidth: 1,\n              lineTension: 0,\n              steppedLine:false,\n              \n            }]\n          }\n        }));\n        //console.log(data);\n      });\n    }\n\n  }, [currencyState.currency]);\n\n  return lineData==null || currencyState.currency == null?''\n    :\n    <canvas\n      ref={chartRef}\n      data={lineData}\n      color=\"#70CAD1\"\n    />\n  \n}\n\nfunction App() {\n\n  const [currencyState, dispatch] = useReducer(reducer, initialState);\n  useEffect(()=>{\n    if(currencyState.currency != null)\n      dispatch({type:actions.SET_FROM_NUMBER, data:getResult(currencyState.toNumber, currencyState.currency, 1)});\n  }, [currencyState.currency]);\n  return useMemo(()=>{\n    return (\n      <CurrencyContext.Provider value={{ currencyState, dispatch }}>\n        <div className=\"App\">\n          <Container>\n            <Row className=\"justify-content-md-center justify-content-sm-center\"> \n              <Col xs={12} sm={10} md={6} style={colStyle} className=\"header-container\">   \n                <Row>\n                    <Col xs={12} sm={12} md={12} style={colStyle}>\n                      <h1>CURRENCY RATES</h1>\n                      <p> Rates published by the European Central Bank</p>\n                    </Col>\n                  </Row>\n              </Col>     \n            </Row>\n            <Row className=\"justify-content-md-center justify-content-sm-center\">\n              <Col xs={12} sm={10} md={6} style={colStyle} className=\"form-container\">     \n                <Row>\n                  <Col xs={12} sm={6} md={6} style={colStyle}>\n                    <FromCurrency />\n                    {\n                      currencyState.isFromCurrency?\n                        <CurrencyList actionType={actions.SET_FROM_CURRENCY} actionType2={actions.SET_IS_FROM_CURRENCY}/>\n                      :''\n                    }           \n                  </Col>\n                  <Col xs={12} sm={6} md={6} style={colStyle}>\n                    <FromNumber/>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={12} sm={6} md={6} style={colStyle}>\n                    <ToCurrency />\n                    {\n                      currencyState.isToCurrency?\n                        <CurrencyList actionType={actions.SET_TO_CURRENCY} actionType2={actions.SET_IS_TO_CURRENCY}/>\n                      :''\n                    }           \n                  </Col>\n                  <Col xs={12} sm={6} md={6} style={colStyle}>\n                    <ToNumber/>\n                  </Col>\n                </Row>\n                <Row>\n                  <LineChart color=\"#6D00BF\"/>\n                </Row>\n              </Col>\n            </Row>\n        </Container>\n        </div>\n      </CurrencyContext.Provider>\n    );\n  }, [currencyState, dispatch]);\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}